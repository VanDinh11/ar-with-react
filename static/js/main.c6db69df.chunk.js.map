{"version":3,"sources":["App.js","jsm/webxr/ARButton.js","index.js"],"names":["container","camera","scene","renderer","reticle","current_object","controls","shadow_plane","groupModel","touchDown","touchX","touchY","deltaX","arToolkitSource","ARButton","sessionInit","button","document","createElement","showStartAR","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","style","display","cursor","right","width","backgroundColor","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","end","disableButton","showARNotSupported","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","left","textDecoration","hitTestSource","hitTestSourceRequested","enableUI","App","useState","mode","showIntro","setShowIntro","arPlaceObject","visible","setFromMatrixPosition","matrix","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","loadModel","url","remove","getElementById","GLTFLoader","setPath","load","gltf","traverse","node","isMesh","castShadow","geometry","THREE","rotateX","Math","PI","material","receiveShadow","add","box","setFromObject","getCenter","target","update","render","animateBasic","requestAnimationFrame","ready","arToolkitContext","domElement","timestamp","frame","referenceSpace","getReferenceSpace","getSession","requestReferenceSpace","requestHitTestSource","space","source","hitTestResults","getHitTestResults","length","hit","fromArray","getPose","transform","useEffect","console","log","directionalLight","set","ambientLight","createLighting","antialias","alpha","setClearColor","outputEncoding","shadowMap","enabled","type","appendChild","OrbitControls","minDistance","maxDistance","options","requiredFeatures","optionalFeatures","domOverlay","root","body","createButton","addARButton","matrixAutoUpdate","rotateObject","rotation","y","e","preventDefault","touches","pageX","pageY","addRotateModel","setAnimationLoop","height","overflow","className","onClick","fontSize","hideButton","scale","x","z","ReactDOM","Fragment"],"mappings":"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","file":"static/js/main.c6db69df.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { RoughnessMipmapper } from 'three/examples/jsm/utils/RoughnessMipmapper.js';\r\nimport './loader.css';\r\nimport { ARButton } from './jsm/webxr/ARButton';\r\n// import './jsartoolkit5/artoolkit.api';\r\n// import './jsartoolkit5/artoolkit.min.js';\r\n// import './threex/threex-artoolkitsource';\r\n// import './threex/threex-artoolkitcontext';\r\n// import './threex/threex-arbasecontrols';\r\n// import './threex/threex-armarkercontrols';\r\n\r\n/**\r\n * nén file gltf:\r\n * dùng flag -d khi convert\r\n * https://github.com/CesiumGS/gltf-pipeline\r\n */\r\n\r\nlet container;\r\nlet camera, scene, renderer;\r\n\r\nlet reticle, current_object, controls, shadow_plane, groupModel;\r\n\r\nlet hitTestSource = null;\r\nlet hitTestSourceRequested = false;\r\nlet enableUI = true;\r\n\r\nlet touchDown, touchX, touchY, deltaX, deltaY;\r\n\r\nlet arToolkitSource, arToolkitContext;\r\nlet markerRoot1, markerRoot2;\r\n\r\n// const pathModel = 'ar-with-react/3d/'; // local\r\nconst pathModel = '3d/'; // build\r\n\r\nconst App = () => {\r\n    const [mode, setMode] = useState(1); \r\n    const [showIntro, setShowIntro] = useState(true);\r\n    /**\r\n     * 0: arToolkit enable, detect marker\r\n     * 1: detect plane\r\n     */\r\n\r\n    useEffect(() => {\r\n        console.log('new update 12');\r\n        init();\r\n        // \r\n        switch (mode) {\r\n            case 0:\r\n                animateBasic();\r\n                break;\r\n            case 1:\r\n                animateWithXR();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [])\r\n    \r\n    //////////////////////////////////////////\r\n    // Document Event  ///////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function openNav(e) {\r\n        e.preventDefault();\r\n        document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n    }\r\n\r\n    function closeNav(e) {\r\n        e.preventDefault();\r\n        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n    }\r\n\r\n    function arPlaceObject() {\r\n        if (reticle.visible) {\r\n            groupModel.position.setFromMatrixPosition(reticle.matrix);\r\n            groupModel.visible = true;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////\r\n    // Init Scene ////////////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function createCamera () {\r\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.001, 200);\r\n    }\r\n\r\n    function createRenderer () {\r\n        renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        // , logarithmicDepthBuffer: true \r\n        renderer.setClearColor(new THREE.Color('lightgrey'), 0);\r\n        // renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        // THREE.GammaEncoding // fix object model too dark\r\n        renderer.outputEncoding = THREE.sRGBEncoding; \r\n        // renderer.gammaFactor = 2.2;\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        if(mode === 1) {\r\n            renderer.xr.enabled = true;\r\n        }\r\n        \r\n        container.appendChild(renderer.domElement);\r\n    }\r\n\r\n    function createLighting () {\r\n        var directionalLight = new THREE.DirectionalLight(0xdddddd, 0.5);\r\n        directionalLight.position.set(0, 5, -1);\r\n        directionalLight.castShadow = true;\r\n        scene.add(directionalLight);\r\n\r\n        var ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n        // ambientLight.position.set(0, 2, -1);\r\n        scene.add(ambientLight);\r\n    }\r\n\r\n    function createControl () {\r\n        controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.addEventListener('change', render);\r\n\r\n        controls.minDistance = 2;\r\n        controls.maxDistance = 10;\r\n        controls.target.set(0, 0, 0);\r\n    }\r\n\r\n    function addARButton () {\r\n        var options = {\r\n            requiredFeatures: ['hit-test'],\r\n            optionalFeatures: ['dom-overlay']\r\n        }\r\n\r\n        options.domOverlay = { root: document.getElementById('ui-content') };\r\n        document.body.appendChild(ARButton.createButton(renderer, options));\r\n    }\r\n\r\n    function addReticle () { // ring cursor for detection\r\n        reticle = new THREE.Mesh(\r\n            new THREE.RingBufferGeometry(0.015, 0.02, 32).rotateX(- Math.PI / 2),\r\n            new THREE.MeshBasicMaterial()\r\n        );\r\n        reticle.matrixAutoUpdate = false;\r\n        reticle.visible = false;\r\n        scene.add(reticle);\r\n    }\r\n\r\n    function arToolkitSourceSetup () {\r\n        // arToolkitSource = new THREEx.ArToolkitSource({\r\n        //     sourceType : 'webcam',\r\n        // });\r\n    \r\n        // arToolkitSource.init(function onReady(){\r\n        //     onWindowResize()\r\n        // });\r\n    }\r\n\r\n    function init() {\r\n        container = document.getElementById('container');\r\n        scene = new THREE.Scene();\r\n\r\n        createCamera();\r\n        createLighting();\r\n        createRenderer();\r\n        createControl();\r\n\r\n        addARButton();\r\n        addReticle();\r\n\r\n        addRotateModel();\r\n        // arToolkitSourceSetup();\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n        document.getElementById('ARButton').addEventListener('click', function () {\r\n\t\t\tif(groupModel) groupModel.visible = false;\r\n        })\r\n    }\r\n\r\n    function onWindowResize() {\r\n\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n        // if(arToolkitSource) {\r\n        //     arToolkitSource.onResize()\t\r\n        //     arToolkitSource.copySizeTo(renderer.domElement)\t\r\n        //     if ( arToolkitContext.arController !== null )\r\n        //     {\r\n        //         arToolkitSource.copySizeTo(arToolkitContext.arController.canvas)\t\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    //////////////////////////////////////////\r\n    // Model handling ////////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function loadModel(url) {\r\n        if (groupModel) {\r\n            scene.remove(groupModel);\r\n        }\r\n\r\n        document.getElementById('loader-model').style.display = 'block';\r\n        new GLTFLoader()\r\n            .setPath(pathModel) // path luôn được xác định từ folder chứa index.html\r\n            .load(url, function (gltf) {\r\n                current_object = gltf.scene;\r\n\r\n                // console.log(current_object.children[0].children);\r\n                // current_object.children[0].children[0].material.metalness = 0;\r\n                // current_object.children[0].children[1].material.metalness = 0;\r\n\r\n                current_object.traverse(function (node) { // cast shadow trên từng thành phần của model\r\n                    if ( node.isMesh ) { \r\n                        node.castShadow = true;\r\n                    }\r\n                })\r\n\r\n                let geometry = new THREE.PlaneBufferGeometry(200, 200);\r\n                geometry.rotateX( - Math.PI / 2 );\r\n                let material = new THREE.ShadowMaterial({ color: 0x000000 });\r\n                material.opacity = 0.5;\r\n                shadow_plane = new THREE.Mesh(geometry, material);\r\n                shadow_plane.receiveShadow = true;\r\n\r\n                groupModel = new THREE.Group();\r\n                groupModel.add(current_object);\r\n                groupModel.add(shadow_plane);\r\n\r\n                scene.add(groupModel);\r\n\r\n                var box = new THREE.Box3();\r\n                box.setFromObject(groupModel);\r\n                box.getCenter(controls.target);\r\n                arPlaceObject();\r\n\r\n                document.getElementById('loader-model').style.display = 'none';\r\n                document.getElementById('ARButton').style.display = 'block';\r\n\r\n                controls.update();\r\n                \r\n                setShowIntro(false);\r\n                render();\r\n            });\r\n    }\r\n\r\n    function addRotateModel () {\r\n        renderer.domElement.addEventListener('touchstart', function (e) {\r\n            e.preventDefault();\r\n            touchDown = true;\r\n            touchX = e.touches[0].pageX;\r\n            touchY = e.touches[0].pageY;\r\n        }, false)\r\n        renderer.domElement.addEventListener('touchend', function (e) {\r\n            e.preventDefault();\r\n            touchDown = false;\r\n        }, false)\r\n        renderer.domElement.addEventListener('touchmove', function (e) {\r\n            e.preventDefault();\r\n\r\n            if (!touchDown) return;\r\n\r\n            deltaX = e.touches[0].pageX - touchX;\r\n            deltaY = e.touches[0].pageY - touchY;\r\n            touchX = e.touches[0].pageX;\r\n            touchY = e.touches[0].pageY;\r\n\r\n            rotateObject();\r\n        }, false)\r\n\r\n        function rotateObject() {\r\n            if (groupModel && reticle && hitTestSource) {\r\n                groupModel.rotation.y += deltaX / 100;\r\n            }\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////\r\n    // Update and Animate ////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function animateBasic () {\r\n        requestAnimationFrame(animateBasic);\r\n        if ( arToolkitSource.ready !== false )\r\n            arToolkitContext.update( arToolkitSource.domElement );\r\n        \r\n        render(); // not pass param in order to render normally.\r\n    }\r\n\r\n    function animateWithXR() {\r\n        renderer.setAnimationLoop(render);\r\n    }\r\n\r\n    function render(timestamp, frame) {\r\n        // if has param, it's used with XR, otherwise, it renders normally.\r\n        if (frame) {\r\n            const referenceSpace = renderer.xr.getReferenceSpace();\r\n            const session = renderer.xr.getSession();\r\n\r\n            if (hitTestSourceRequested === false) {\r\n                session.requestReferenceSpace('viewer').then(function (referenceSpace) {\r\n                    session.requestHitTestSource({ space: referenceSpace }).then(function (source) {\r\n                        hitTestSource = source;\r\n                    });\r\n                });\r\n\r\n                session.addEventListener('end', function () {\r\n                    hitTestSourceRequested = false;\r\n                    hitTestSource = null;\r\n\r\n                    reticle.visible = false;\r\n                    var box = new THREE.Box3();\r\n                    box.setFromObject(groupModel);\r\n                    box.getCenter(controls.target);\r\n\r\n                    document.getElementById('place-button').style.display = 'none';\r\n                    document.getElementById('group-zoom').style.display = 'none';\r\n\r\n                });\r\n                hitTestSourceRequested = true;\r\n            }\r\n\r\n            if (hitTestSource) {\r\n                const hitTestResults = frame.getHitTestResults(hitTestSource);\r\n                if (hitTestResults.length) {\r\n                    const hit = hitTestResults[0];\r\n                    document.getElementById('group-zoom').style.display = 'block';\r\n                    if(enableUI) {\r\n                        document.getElementById('place-button').style.display = 'block';\r\n                        document.getElementById('zoom-in-button').style.display = 'block';\r\n                        document.getElementById('zoom-out-button').style.display = 'block';\r\n                        reticle.visible = true;\r\n                    }\r\n                    else{\r\n                        document.getElementById('place-button').style.display = 'none';\r\n                        document.getElementById('zoom-in-button').style.display = 'none';\r\n                        document.getElementById('zoom-out-button').style.display = 'none';\r\n                        reticle.visible = false;\r\n                    }\r\n                    reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\r\n                } else {\r\n                    reticle.visible = false;\r\n                }\r\n            }\r\n        }\r\n        renderer.render(scene, camera);\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', overflow: 'hidden' }}>\r\n            <div className=\"wrap-intro\" style={{display: showIntro ? 'flex' : 'none'}}>\r\n                <p>Select an item then press \"Start XR\"</p>\r\n                <p>You need to scan the floor until a ring appears on your screen.</p>\r\n            </div>\r\n            <div id=\"ui-content\">\r\n                <div id=\"mySidenav\" className=\"sidenav\">\r\n                    <a href=\"#\" className=\"closebtn\" onClick={closeNav}>×</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('old_sofa_free.glb');\r\n                    }}>item 1</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('eames_lounge_chair.gltf');\r\n                    }}>item 2</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('lamp.glb');\r\n                    }}>item 3</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('antique_iron_safe_v2.glb');\r\n                    }}>item 4</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('dancing_girl.gltf');\r\n                    }}>item 5</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('vintage_telephone.gltf');\r\n                    }}>item 6</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('wooden_chair_low_poly.glb');\r\n                    }}>item 7</a>\r\n                </div>\r\n                <span className=\"buttonMenu\" style={{ fontSize: '30px', cursor: 'pointer' }} onClick={openNav}>☰</span>\r\n                <button type=\"button\" id=\"place-button\" onClick={arPlaceObject}>PLACE</button>\r\n                <div id=\"group-zoom\">\r\n                    <button id=\"hide-button\" type=\"button\"\r\n                        onClick={() => {\r\n                            let hideButton = document.getElementById('hide-button');\r\n                            enableUI = !enableUI;\r\n                            if(enableUI) hideButton.innerHTML = 'Hide UI';\r\n                            else hideButton.innerHTML = 'Show UI';\r\n                        }}\r\n                    >Hide UI</button>\r\n                    <button id=\"zoom-in-button\" type=\"button\" \r\n                        onClick={() => {\r\n                            if(groupModel && reticle.visible) {\r\n                                groupModel.scale.x += 0.1;\r\n                                groupModel.scale.y += 0.1;\r\n                                groupModel.scale.z += 0.1;\r\n                            }\r\n                        }}\r\n                    >+</button>\r\n                    <button id=\"zoom-out-button\" type=\"button\"\r\n                        onClick={() => {\r\n                            if (groupModel && reticle.visible && groupModel.scale.x > 0.2 && groupModel.scale.y > 0.2 && groupModel.scale.z > 0.2) {\r\n                                groupModel.scale.x -= 0.1;\r\n                                groupModel.scale.y -= 0.1;\r\n                                groupModel.scale.z -= 0.1;\r\n                            }\r\n                        }}\r\n                    >-</button>\r\n                </div>\r\n                <div id=\"container\" style={{ position: 'fixed' }}>\r\n                </div>\r\n                <div id=\"loader-model\"><div className=\"lds-circle\"><div></div></div></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","class ARButton {\r\n\r\n\tstatic createButton( renderer, sessionInit = {} ) {\r\n\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showStartAR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tfunction onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\trenderer.xr.setReferenceSpaceType( 'local' );\r\n\t\t\t\trenderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'Stop XR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'Start XR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.right = '20px';\r\n\t\t\tbutton.style.width = '100px';\r\n\t\t\tbutton.style.backgroundColor = '#fff';\r\n\r\n\t\t\tbutton.textContent = 'Start XR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\t\t\t\t\t// request section with section mode: 'immersive-ar', see https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/requestSession\r\n\t\t\t\t\t// onSessionStarted will receive a section as result. \r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-ar', sessionInit ).then( onSessionStarted );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.right = '20px';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showARNotSupported() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'XR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = '#fff';\r\n\t\t\telement.style.color = '#333';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '10001';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'ARButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-ar' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showStartAR() : showARNotSupported();\r\n\r\n\t\t\t} ).catch( showARNotSupported );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\t// isSecureContext dùng để check https or http, nếu là https => return true;\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ARButton };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}