{"version":3,"sources":["App.js","jsm/webxr/ARButton.js","index.js"],"names":["container","camera","scene","renderer","reticle","current_object","controls","shadow_plane","groupModel","touchDown","touchX","touchY","deltaX","ARButton","sessionInit","button","document","createElement","showStartAR","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","style","display","cursor","right","width","backgroundColor","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","end","disableButton","showARNotSupported","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","left","textDecoration","hitTestSource","hitTestSourceRequested","enableUI","App","arPlaceObject","visible","setFromMatrixPosition","matrix","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","loadModel","url","remove","getElementById","GLTFLoader","setPath","load","gltf","traverse","node","isMesh","castShadow","geometry","THREE","rotateX","Math","PI","material","receiveShadow","add","box","setFromObject","getCenter","target","update","render","timestamp","frame","referenceSpace","getReferenceSpace","getSession","requestReferenceSpace","requestHitTestSource","space","source","hitTestResults","getHitTestResults","length","hit","fromArray","getPose","transform","useEffect","directionalLight","set","ambientLight","antialias","alpha","setPixelRatio","devicePixelRatio","shadowMap","enabled","type","appendChild","domElement","OrbitControls","minDistance","maxDistance","options","requiredFeatures","optionalFeatures","rotateObject","rotation","y","domOverlay","root","body","createButton","matrixAutoUpdate","e","preventDefault","touches","pageX","pageY","init","setAnimationLoop","height","overflow","className","onClick","fontSize","hideButton","scale","x","z","ReactDOM","Fragment"],"mappings":"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","file":"static/js/main.376e06d0.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { RoughnessMipmapper } from 'three/examples/jsm/utils/RoughnessMipmapper.js';\r\nimport { ARButton } from './jsm/webxr/ARButton';\r\n\r\nlet container;\r\nlet camera, scene, renderer;\r\n\r\nlet reticle, current_object, controls, shadow_plane, groupModel;\r\n\r\nlet hitTestSource = null;\r\nlet hitTestSourceRequested = false;\r\nlet enableUI = true;\r\n\r\nlet touchDown, touchX, touchY, deltaX, deltaY;\r\n\r\nconst App = () => {\r\n\r\n    useEffect(() => {\r\n        init();\r\n        animate();\r\n\r\n\t\tdocument.getElementById('ARButton').addEventListener('click', function () {\r\n\t\t\tif(groupModel) groupModel.visible = false;\r\n\t\t})\r\n    }, [])\r\n\r\n    function openNav(e) {\r\n        e.preventDefault();\r\n        document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n    }\r\n\r\n    function closeNav(e) {\r\n        e.preventDefault();\r\n        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n    }\r\n\r\n    function arPlaceObject() {\r\n        if (reticle.visible) {\r\n            groupModel.position.setFromMatrixPosition(reticle.matrix);\r\n            groupModel.visible = true;\r\n        }\r\n    }\r\n\r\n    function init() {\r\n\r\n        container = document.getElementById('container');\r\n\r\n        scene = new THREE.Scene();\r\n\r\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.001, 200);\r\n\r\n        var directionalLight = new THREE.DirectionalLight(0xdddddd, 0.8);\r\n        directionalLight.position.set(0, 5, -1);\r\n        directionalLight.castShadow = true;\r\n        scene.add(directionalLight);\r\n\r\n        var ambientLight = new THREE.AmbientLight(0xffffff);\r\n        scene.add(ambientLight);\r\n\r\n        renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        renderer.xr.enabled = true;\r\n        container.appendChild(renderer.domElement);\r\n\r\n        controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.addEventListener('change', render);\r\n\r\n        controls.minDistance = 2;\r\n        controls.maxDistance = 10;\r\n        controls.target.set(0, 0, 0);\r\n\r\n        var options = {\r\n            requiredFeatures: ['hit-test'],\r\n            optionalFeatures: ['dom-overlay']\r\n        }\r\n\r\n        options.domOverlay = { root: document.getElementById('ui-content') };\r\n        document.body.appendChild(ARButton.createButton(renderer, options));\r\n\r\n        reticle = new THREE.Mesh(\r\n            new THREE.RingBufferGeometry(0.015, 0.02, 32).rotateX(- Math.PI / 2),\r\n            new THREE.MeshBasicMaterial()\r\n        );\r\n        reticle.matrixAutoUpdate = false;\r\n        reticle.visible = false;\r\n        scene.add(reticle);\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n        renderer.domElement.addEventListener('touchstart', function (e) {\r\n            e.preventDefault();\r\n            touchDown = true;\r\n            touchX = e.touches[0].pageX;\r\n            touchY = e.touches[0].pageY;\r\n        }, false)\r\n        renderer.domElement.addEventListener('touchend', function (e) {\r\n            e.preventDefault();\r\n            touchDown = false;\r\n        }, false)\r\n        renderer.domElement.addEventListener('touchmove', function (e) {\r\n            e.preventDefault();\r\n\r\n            if (!touchDown) return;\r\n\r\n            deltaX = e.touches[0].pageX - touchX;\r\n            deltaY = e.touches[0].pageY - touchY;\r\n            touchX = e.touches[0].pageX;\r\n            touchY = e.touches[0].pageY;\r\n\r\n            rotateObject();\r\n        }, false)\r\n\r\n        function rotateObject() {\r\n            if (groupModel && reticle && hitTestSource) {\r\n                groupModel.rotation.y += deltaX / 100;\r\n            }\r\n        }\r\n    }\r\n\r\n    function onWindowResize() {\r\n\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    }\r\n\r\n    function animate() {\r\n        renderer.setAnimationLoop(render);\r\n    }\r\n\r\n    function loadModel(url) {\r\n        if (groupModel) {\r\n            scene.remove(groupModel);\r\n        }\r\n\r\n        document.getElementById('loader-model').style.display = 'block';\r\n        new GLTFLoader()\r\n            .setPath('3d/') // path luôn được xác định từ folder chứa index.html\r\n            .load(url, function (gltf) {\r\n                current_object = gltf.scene;\r\n\r\n                current_object.traverse(function (node) { // cast shadow trên từng thành phần của model\r\n                    if ( node.isMesh ) { node.castShadow = true; }\r\n                })\r\n\r\n                let geometry = new THREE.PlaneBufferGeometry(200, 200);\r\n                geometry.rotateX( - Math.PI / 2 );\r\n                let material = new THREE.ShadowMaterial({ color: 0x000000 });\r\n                material.opacity = 0.5;\r\n                shadow_plane = new THREE.Mesh(geometry, material);\r\n                shadow_plane.receiveShadow = true;\r\n\r\n                groupModel = new THREE.Group();\r\n                groupModel.add(current_object);\r\n                groupModel.add(shadow_plane);\r\n\r\n                scene.add(groupModel);\r\n\r\n                var box = new THREE.Box3();\r\n                box.setFromObject(groupModel);\r\n                box.getCenter(controls.target);\r\n                arPlaceObject();\r\n\r\n                document.getElementById('loader-model').style.display = 'none';\r\n\r\n                controls.update();\r\n                render();\r\n            });\r\n    }\r\n\r\n    function render(timestamp, frame) {\r\n\r\n        if (frame) {\r\n\r\n            const referenceSpace = renderer.xr.getReferenceSpace();\r\n            const session = renderer.xr.getSession();\r\n\r\n            if (hitTestSourceRequested === false) {\r\n\r\n                session.requestReferenceSpace('viewer').then(function (referenceSpace) {\r\n\r\n                    session.requestHitTestSource({ space: referenceSpace }).then(function (source) {\r\n\r\n                        hitTestSource = source;\r\n\r\n                    });\r\n\r\n                });\r\n\r\n                session.addEventListener('end', function () {\r\n\r\n                    hitTestSourceRequested = false;\r\n                    hitTestSource = null;\r\n\r\n                    reticle.visible = false;\r\n                    var box = new THREE.Box3();\r\n                    box.setFromObject(groupModel);\r\n                    box.getCenter(controls.target);\r\n\r\n                    document.getElementById('place-button').style.display = 'none';\r\n                    document.getElementById('group-zoom').style.display = 'none';\r\n\r\n                });\r\n\r\n                hitTestSourceRequested = true;\r\n\r\n            }\r\n\r\n            if (hitTestSource) {\r\n\r\n                const hitTestResults = frame.getHitTestResults(hitTestSource);\r\n\r\n                if (hitTestResults.length) {\r\n\r\n                    const hit = hitTestResults[0];\r\n\r\n                    document.getElementById('group-zoom').style.display = 'block';\r\n                    if(enableUI) {\r\n                        document.getElementById('place-button').style.display = 'block';\r\n                        document.getElementById('zoom-in-button').style.display = 'block';\r\n                        document.getElementById('zoom-out-button').style.display = 'block';\r\n                        reticle.visible = true;\r\n                    }\r\n                    else{\r\n                        document.getElementById('place-button').style.display = 'none';\r\n                        document.getElementById('zoom-in-button').style.display = 'none';\r\n                        document.getElementById('zoom-out-button').style.display = 'none';\r\n                        reticle.visible = false;\r\n                    }\r\n\r\n                    \r\n                    reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\r\n\r\n                } else {\r\n\r\n                    reticle.visible = false;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        renderer.render(scene, camera);\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', overflow: 'hidden' }}>\r\n            <div id=\"ui-content\">\r\n                <div id=\"mySidenav\" className=\"sidenav\">\r\n                    <a href=\"#\" className=\"closebtn\" onClick={closeNav}>×</a>\r\n                    <a className=\"ar-object\" id=\"ar-obj-1\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('dancing_girl.gltf');\r\n                    }}>item 1</a>\r\n                    <a className=\"ar-object\" id=\"ar-obj-2\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('matilda.gltf');\r\n                    }}>item 2</a>\r\n                    <a className=\"ar-object\" id=\"ar-obj-3\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('samurai_mayumi_rescale.glb');\r\n                    }}>item 3</a>\r\n                </div>\r\n                <span className=\"buttonMenu\" style={{ fontSize: '30px', cursor: 'pointer' }} onClick={openNav}>☰</span>\r\n                <button type=\"button\" id=\"place-button\" onClick={arPlaceObject}>PLACE</button>\r\n                <div id=\"group-zoom\">\r\n                    <button id=\"hide-button\" type=\"button\"\r\n                        onClick={() => {\r\n                            let hideButton = document.getElementById('hide-button');\r\n                            enableUI = !enableUI;\r\n                            if(enableUI) hideButton.innerHTML = 'Hide UI';\r\n                            else hideButton.innerHTML = 'Show UI';\r\n                        }}\r\n                    >Hide UI</button>\r\n                    <button id=\"zoom-in-button\" type=\"button\" \r\n                        onClick={() => {\r\n                            if(groupModel && reticle.visible) {\r\n                                groupModel.scale.x += 0.1;\r\n                                groupModel.scale.y += 0.1;\r\n                                groupModel.scale.z += 0.1;\r\n                            }\r\n                        }}\r\n                    >+</button>\r\n                    <button id=\"zoom-out-button\" type=\"button\"\r\n                        onClick={() => {\r\n                            if (groupModel && reticle.visible && groupModel.scale.x > 0.2 && groupModel.scale.y > 0.2 && groupModel.scale.z > 0.2) {\r\n                                groupModel.scale.x -= 0.1;\r\n                                groupModel.scale.y -= 0.1;\r\n                                groupModel.scale.z -= 0.1;\r\n                            }\r\n                        }}\r\n                    >-</button>\r\n                </div>\r\n                <div id=\"container\" style={{ position: 'fixed' }}>\r\n                </div>\r\n                <div id=\"loader-model\"><span>Loading...</span></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","class ARButton {\r\n\r\n\tstatic createButton( renderer, sessionInit = {} ) {\r\n\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showStartAR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tfunction onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\trenderer.xr.setReferenceSpaceType( 'local' );\r\n\t\t\t\trenderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'Stop XR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'Start XR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.right = '20px';\r\n\t\t\tbutton.style.width = '100px';\r\n\t\t\tbutton.style.backgroundColor = '#fff';\r\n\r\n\t\t\tbutton.textContent = 'Start XR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\t\t\t\t\t// request section with section mode: 'immersive-ar', see https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/requestSession\r\n\t\t\t\t\t// onSessionStarted will receive a section as result. \r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-ar', sessionInit ).then( onSessionStarted );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.right = '20px';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showARNotSupported() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'XR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = '#fff';\r\n\t\t\telement.style.color = '#333';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '10001';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'ARButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-ar' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showStartAR() : showARNotSupported();\r\n\r\n\t\t\t} ).catch( showARNotSupported );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\t// isSecureContext dùng để check https or http, nếu là https => return true;\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ARButton };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}