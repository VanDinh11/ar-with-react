{"version":3,"sources":["App.js","jsm/webxr/ARButton.js","index.js"],"names":["container","camera","scene","renderer","reticle","current_object","controls","shadow_plane","groupModel","touchDown","touchX","touchY","deltaX","arToolkitSource","ARButton","sessionInit","button","document","createElement","showStartAR","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","style","display","cursor","right","width","backgroundColor","onmouseenter","opacity","onmouseleave","onclick","alert","navigator","requestSession","then","end","disableButton","showARNotSupported","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","left","textDecoration","hitTestSource","hitTestSourceRequested","enableUI","App","useState","mode","showIntro","setShowIntro","arPlaceObject","visible","setFromMatrixPosition","matrix","onWindowResize","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","loadModel","url","remove","getElementById","GLTFLoader","setPath","load","gltf","traverse","node","isMesh","castShadow","geometry","THREE","rotateX","Math","PI","material","depthWrite","receiveShadow","add","box","setFromObject","getCenter","target","update","render","animateBasic","requestAnimationFrame","ready","arToolkitContext","domElement","timestamp","frame","referenceSpace","getReferenceSpace","getSession","requestReferenceSpace","requestHitTestSource","space","source","hitTestResults","getHitTestResults","length","hit","fromArray","getPose","transform","useEffect","console","log","directionalLight","set","shadow","top","ambientLight","createLighting","antialias","alpha","setClearColor","setPixelRatio","devicePixelRatio","outputEncoding","shadowMap","enabled","type","appendChild","OrbitControls","minDistance","maxDistance","options","requiredFeatures","optionalFeatures","domOverlay","root","body","createButton","addARButton","matrixAutoUpdate","rotateObject","rotation","y","e","preventDefault","touches","pageX","pageY","addRotateModel","setAnimationLoop","height","overflow","className","onClick","fontSize","hideButton","scale","x","z","ReactDOM","Fragment"],"mappings":"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","file":"static/js/main.c540b5f4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { RoughnessMipmapper } from 'three/examples/jsm/utils/RoughnessMipmapper.js';\r\nimport './loader.css';\r\nimport { ARButton } from './jsm/webxr/ARButton';\r\n// import './jsartoolkit5/artoolkit.api';\r\n// import './jsartoolkit5/artoolkit.min.js';\r\n// import './threex/threex-artoolkitsource';\r\n// import './threex/threex-artoolkitcontext';\r\n// import './threex/threex-arbasecontrols';\r\n// import './threex/threex-armarkercontrols';\r\n\r\n/**\r\n * nén file gltf:\r\n * dùng flag -d khi convert\r\n * https://github.com/CesiumGS/gltf-pipeline\r\n */\r\n\r\nlet container;\r\nlet camera, scene, renderer;\r\n\r\nlet reticle, current_object, controls, shadow_plane, groupModel;\r\n\r\nlet hitTestSource = null;\r\nlet hitTestSourceRequested = false;\r\nlet enableUI = true;\r\n\r\nlet touchDown, touchX, touchY, deltaX, deltaY;\r\n\r\nlet arToolkitSource, arToolkitContext;\r\nlet markerRoot1, markerRoot2;\r\n\r\n// const pathModel = 'ar-with-react/3d/'; // local\r\nconst pathModel = '3d/'; // build\r\n\r\nconst App = () => {\r\n    const [mode, setMode] = useState(1); \r\n    const [showIntro, setShowIntro] = useState(true);\r\n    /**\r\n     * 0: arToolkit enable, detect marker\r\n     * 1: detect plane\r\n     */\r\n\r\n    useEffect(() => {\r\n        console.log('new update 16');\r\n        init();\r\n        // \r\n        switch (mode) {\r\n            case 0:\r\n                animateBasic();\r\n                break;\r\n            case 1:\r\n                animateWithXR();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [])\r\n    \r\n    //////////////////////////////////////////\r\n    // Document Event  ///////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function openNav(e) {\r\n        e.preventDefault();\r\n        document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n    }\r\n\r\n    function closeNav(e) {\r\n        e.preventDefault();\r\n        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n    }\r\n\r\n    function arPlaceObject() {\r\n        if (reticle.visible) {\r\n            groupModel.position.setFromMatrixPosition(reticle.matrix);\r\n            groupModel.visible = true;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////\r\n    // Init Scene ////////////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function createCamera () {\r\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.001, 200);\r\n    }\r\n\r\n    function createRenderer () {\r\n        renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        // , logarithmicDepthBuffer: true \r\n        renderer.setClearColor(new THREE.Color('lightgrey'), 0);\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        // THREE.GammaEncoding // fix object model too dark\r\n        renderer.outputEncoding = THREE.sRGBEncoding; // fix object model too dark\r\n        // renderer.gammaFactor = 2.2;\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        // renderer.shadowMap.type = THREE.PCFShadowMap;\r\n        if(mode === 1) {\r\n            renderer.xr.enabled = true;\r\n        }\r\n        \r\n        container.appendChild(renderer.domElement);\r\n    }\r\n\r\n    function createLighting () {\r\n        var directionalLight = new THREE.DirectionalLight(0xdddddd, 0.5);\r\n        directionalLight.position.set(0, 5, -1);\r\n        // thu hẹp camera lại càng ít (> 0) thì shadow sẽ càng sharp hơn.\r\n        directionalLight.shadow.camera.left = -3;\r\n        directionalLight.shadow.camera.right = 3;\r\n        directionalLight.shadow.camera.top = -3;\r\n        directionalLight.shadow.camera.bottom = 3;\r\n        directionalLight.castShadow = true;\r\n        scene.add(directionalLight);\r\n\r\n        var ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n        // ambientLight.position.set(0, 2, -1);\r\n        scene.add(ambientLight);\r\n\r\n        // const helper = new THREE.CameraHelper( directionalLight.shadow.camera );\r\n        // scene.add( helper );\r\n    }\r\n\r\n    function createControl () {\r\n        controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.addEventListener('change', render);\r\n\r\n        controls.minDistance = 2;\r\n        controls.maxDistance = 10;\r\n        controls.target.set(0, 0, 0);\r\n    }\r\n\r\n    function addARButton () {\r\n        var options = {\r\n            requiredFeatures: ['hit-test'],\r\n            optionalFeatures: ['dom-overlay']\r\n        }\r\n\r\n        options.domOverlay = { root: document.getElementById('ui-content') };\r\n        document.body.appendChild(ARButton.createButton(renderer, options));\r\n    }\r\n\r\n    function addReticle () { // ring cursor for detection\r\n        reticle = new THREE.Mesh(\r\n            new THREE.RingBufferGeometry(0.015, 0.02, 32).rotateX(- Math.PI / 2),\r\n            new THREE.MeshBasicMaterial()\r\n        );\r\n        reticle.matrixAutoUpdate = false;\r\n        reticle.visible = false;\r\n        scene.add(reticle);\r\n    }\r\n\r\n    function arToolkitSourceSetup () {\r\n        // arToolkitSource = new THREEx.ArToolkitSource({\r\n        //     sourceType : 'webcam',\r\n        // });\r\n    \r\n        // arToolkitSource.init(function onReady(){\r\n        //     onWindowResize()\r\n        // });\r\n    }\r\n\r\n    function init() {\r\n        container = document.getElementById('container');\r\n        scene = new THREE.Scene();\r\n\r\n        createCamera();\r\n        createLighting();\r\n        createRenderer();\r\n        createControl();\r\n\r\n        addARButton();\r\n        addReticle();\r\n\r\n        addRotateModel();\r\n        // arToolkitSourceSetup();\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n        document.getElementById('ARButton').addEventListener('click', function () {\r\n\t\t\tif(groupModel) groupModel.visible = false;\r\n        })\r\n    }\r\n\r\n    function onWindowResize() {\r\n\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n        // if(arToolkitSource) {\r\n        //     arToolkitSource.onResize()\t\r\n        //     arToolkitSource.copySizeTo(renderer.domElement)\t\r\n        //     if ( arToolkitContext.arController !== null )\r\n        //     {\r\n        //         arToolkitSource.copySizeTo(arToolkitContext.arController.canvas)\t\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    //////////////////////////////////////////\r\n    // Model handling ////////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function loadModel(url) {\r\n        if (groupModel) {\r\n            scene.remove(groupModel);\r\n        }\r\n\r\n        document.getElementById('loader-model').style.display = 'block';\r\n        new GLTFLoader()\r\n            .setPath(pathModel) // path luôn được xác định từ folder chứa index.html\r\n            .load(url, function (gltf) {\r\n                current_object = gltf.scene;\r\n\r\n                // console.log(current_object.children[0].children);\r\n                // current_object.children[0].children[0].material.metalness = 0;\r\n                // current_object.children[0].children[1].material.metalness = 0;\r\n\r\n                current_object.traverse(function (node) { // cast shadow trên từng thành phần của model\r\n                    if ( node.isMesh ) { \r\n                        node.castShadow = true;\r\n                    }\r\n                })\r\n\r\n                let geometry = new THREE.PlaneBufferGeometry(20, 20);\r\n                geometry.rotateX( - Math.PI / 2 );\r\n                let material = new THREE.ShadowMaterial({ color: 0x000000 });\r\n                material.opacity = 0.5;\r\n                material.depthWrite = false;\r\n                shadow_plane = new THREE.Mesh(geometry, material);\r\n                shadow_plane.receiveShadow = true;\r\n\r\n                groupModel = new THREE.Group();\r\n                groupModel.add(current_object);\r\n                groupModel.add(shadow_plane);\r\n\r\n                scene.add(groupModel);\r\n\r\n                var box = new THREE.Box3();\r\n                box.setFromObject(groupModel);\r\n                box.getCenter(controls.target);\r\n                arPlaceObject();\r\n\r\n                document.getElementById('loader-model').style.display = 'none';\r\n                document.getElementById('ARButton').style.display = 'block';\r\n\r\n                controls.update();\r\n                \r\n                setShowIntro(false);\r\n                render();\r\n            });\r\n    }\r\n\r\n    function addRotateModel () {\r\n        renderer.domElement.addEventListener('touchstart', function (e) {\r\n            e.preventDefault();\r\n            touchDown = true;\r\n            touchX = e.touches[0].pageX;\r\n            touchY = e.touches[0].pageY;\r\n        }, false)\r\n        renderer.domElement.addEventListener('touchend', function (e) {\r\n            e.preventDefault();\r\n            touchDown = false;\r\n        }, false)\r\n        renderer.domElement.addEventListener('touchmove', function (e) {\r\n            e.preventDefault();\r\n\r\n            if (!touchDown) return;\r\n\r\n            deltaX = e.touches[0].pageX - touchX;\r\n            deltaY = e.touches[0].pageY - touchY;\r\n            touchX = e.touches[0].pageX;\r\n            touchY = e.touches[0].pageY;\r\n\r\n            rotateObject();\r\n        }, false)\r\n\r\n        function rotateObject() {\r\n            if (groupModel && reticle && hitTestSource) {\r\n                groupModel.rotation.y += deltaX / 100;\r\n            }\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////\r\n    // Update and Animate ////////////////////\r\n    //////////////////////////////////////////\r\n\r\n    function animateBasic () {\r\n        requestAnimationFrame(animateBasic);\r\n        if ( arToolkitSource.ready !== false )\r\n            arToolkitContext.update( arToolkitSource.domElement );\r\n        \r\n        render(); // not pass param in order to render normally.\r\n    }\r\n\r\n    function animateWithXR() {\r\n        renderer.setAnimationLoop(render);\r\n    }\r\n\r\n    function render(timestamp, frame) {\r\n        // if has param, it's used with XR, otherwise, it renders normally.\r\n        if (frame) {\r\n            const referenceSpace = renderer.xr.getReferenceSpace();\r\n            const session = renderer.xr.getSession();\r\n\r\n            if (hitTestSourceRequested === false) {\r\n                session.requestReferenceSpace('viewer').then(function (referenceSpace) {\r\n                    session.requestHitTestSource({ space: referenceSpace }).then(function (source) {\r\n                        hitTestSource = source;\r\n                    });\r\n                });\r\n\r\n                session.addEventListener('end', function () {\r\n                    hitTestSourceRequested = false;\r\n                    hitTestSource = null;\r\n\r\n                    reticle.visible = false;\r\n                    var box = new THREE.Box3();\r\n                    box.setFromObject(groupModel);\r\n                    box.getCenter(controls.target);\r\n\r\n                    document.getElementById('place-button').style.display = 'none';\r\n                    document.getElementById('group-zoom').style.display = 'none';\r\n\r\n                });\r\n                hitTestSourceRequested = true;\r\n            }\r\n\r\n            if (hitTestSource) {\r\n                const hitTestResults = frame.getHitTestResults(hitTestSource);\r\n                if (hitTestResults.length) {\r\n                    const hit = hitTestResults[0];\r\n                    document.getElementById('group-zoom').style.display = 'block';\r\n                    if(enableUI) {\r\n                        document.getElementById('place-button').style.display = 'block';\r\n                        document.getElementById('zoom-in-button').style.display = 'block';\r\n                        document.getElementById('zoom-out-button').style.display = 'block';\r\n                        reticle.visible = true;\r\n                    }\r\n                    else{\r\n                        document.getElementById('place-button').style.display = 'none';\r\n                        document.getElementById('zoom-in-button').style.display = 'none';\r\n                        document.getElementById('zoom-out-button').style.display = 'none';\r\n                        reticle.visible = false;\r\n                    }\r\n                    reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\r\n                } else {\r\n                    enableUI = true; // mở lại UI khi mất detect floor.\r\n                    document.getElementById('place-button').style.display = 'none';\r\n                    document.getElementById('zoom-in-button').style.display = 'none';\r\n                    document.getElementById('zoom-out-button').style.display = 'none';\r\n                    reticle.visible = false;\r\n                }\r\n            }\r\n        }\r\n        renderer.render(scene, camera);\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', overflow: 'hidden' }}>\r\n            <div className=\"wrap-intro\" style={{display: showIntro ? 'flex' : 'none'}}>\r\n                <p>Select an item then press \"Start XR\"</p>\r\n                <p>You need to scan the floor until a ring appears on your screen.</p>\r\n            </div>\r\n            <div id=\"ui-content\">\r\n                <div id=\"mySidenav\" className=\"sidenav\">\r\n                    <a href=\"#\" className=\"closebtn\" onClick={closeNav}>×</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('old_sofa_free.glb');\r\n                        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n                    }}>Sofa</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('eames_lounge_chair.gltf');\r\n                        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n                    }}>Lounge Chair</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('lamp.glb');\r\n                        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n                    }}>Lamp</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('antique_iron_safe_v2.glb');\r\n                        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n                    }}>Iron Safe</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('vintage_telephone.gltf');\r\n                        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n                    }}>Telephone</a>\r\n                    <a className=\"ar-object\" href=\"#\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        loadModel('wooden_chair_low_poly.glb');\r\n                        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n                    }}>Wooden Chair</a>\r\n                </div>\r\n                <span className=\"buttonMenu\" style={{ fontSize: '30px', cursor: 'pointer' }} onClick={openNav}>☰</span>\r\n                <button type=\"button\" id=\"place-button\" onClick={arPlaceObject}>PLACE</button>\r\n                <div id=\"group-zoom\">\r\n                    <button id=\"hide-button\" type=\"button\"\r\n                        onClick={() => {\r\n                            let hideButton = document.getElementById('hide-button');\r\n                            enableUI = !enableUI;\r\n                            if(enableUI) hideButton.innerHTML = 'Hide UI';\r\n                            else hideButton.innerHTML = 'Show UI';\r\n                        }}\r\n                    >Hide UI</button>\r\n                    <button id=\"zoom-in-button\" type=\"button\" \r\n                        onClick={() => {\r\n                            if(groupModel && reticle.visible) {\r\n                                groupModel.scale.x += 0.1;\r\n                                groupModel.scale.y += 0.1;\r\n                                groupModel.scale.z += 0.1;\r\n                            }\r\n                        }}\r\n                    >+</button>\r\n                    <button id=\"zoom-out-button\" type=\"button\"\r\n                        onClick={() => {\r\n                            if (groupModel && reticle.visible && groupModel.scale.x > 0.2 && groupModel.scale.y > 0.2 && groupModel.scale.z > 0.2) {\r\n                                groupModel.scale.x -= 0.1;\r\n                                groupModel.scale.y -= 0.1;\r\n                                groupModel.scale.z -= 0.1;\r\n                            }\r\n                        }}\r\n                    >-</button>\r\n                </div>\r\n                <div id=\"container\" style={{ position: 'fixed' }}>\r\n                </div>\r\n                <div id=\"loader-model\"><div className=\"lds-circle\"><div></div></div></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","class ARButton {\r\n\tstatic createButton( renderer, sessionInit = {} ) {\r\n\t\tconst button = document.createElement( 'button' );\r\n\t\tfunction showStartAR( /*device*/ ) {\r\n\t\t\tlet currentSession = null;\r\n\t\t\tfunction onSessionStarted( session ) {\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\t\t\t\trenderer.xr.setReferenceSpaceType( 'local' );\r\n\t\t\t\trenderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'Stop XR';\r\n\t\t\t\tcurrentSession = session;\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\t\t\t\tbutton.textContent = 'Start XR';\r\n\t\t\t\tcurrentSession = null;\r\n\t\t\t}\r\n\r\n\t\t\tbutton.style.display = 'none';\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.right = '20px';\r\n\t\t\tbutton.style.width = '100px';\r\n\t\t\tbutton.style.backgroundColor = '#fff';\r\n\t\t\tbutton.textContent = 'Start XR';\r\n\t\t\tbutton.onmouseenter = function () {\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\t\t\t};\r\n\t\t\tbutton.onmouseleave = function () {\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\t\t\t};\r\n\t\t\tbutton.onclick = function () {\r\n\t\t\t\t// console.log(navigator.xr);\r\n\t\t\t\talert(navigator.xr);\r\n\t\t\t\tif ( currentSession === null ) {\r\n\t\t\t\t\t// request section with section mode: 'immersive-ar', see https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/requestSession\r\n\t\t\t\t\t// onSessionStarted will receive a section as result. \r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-ar', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrentSession.end();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\tfunction disableButton() {\r\n\t\t\tbutton.style.display = '';\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.right = '20px';\r\n\t\t\tbutton.style.width = '150px';\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\t\t\tbutton.onclick = null;\r\n\t\t}\r\n\t\tfunction showARNotSupported() {\r\n\t\t\tdisableButton();\r\n\t\t\tbutton.textContent = 'XR NOT SUPPORTED';\r\n\t\t}\r\n\t\tfunction stylizeElement( element ) {\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = '#fff';\r\n\t\t\telement.style.color = '#333';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '10001';\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\t\t\tbutton.id = 'ARButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\t\t\tstylizeElement( button );\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-ar' ).then( function ( supported ) {\r\n\t\t\t\tsupported ? showStartAR() : showARNotSupported();\r\n\t\t\t} ).catch( showARNotSupported );\r\n\t\t\treturn button;\r\n\t\t} else {\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\t\t\t// isSecureContext dùng để check https or http, nếu là https => return true;\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\t\t\t} else {\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\t\t\t}\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\t\t\tstylizeElement( message );\r\n\t\t\treturn message;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { ARButton };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}